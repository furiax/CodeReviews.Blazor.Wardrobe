@page "/edit-clothpiece"
@page "/edit-clothpiece/{id:int}"
@inject HttpClient Http
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@if(Id == null)
{
    <h3>Add Clothpiece</h3>
}
else
{
    <h3>Edit</h3>
}

<EditForm Model="Cloth" OnSubmit="HandleSubmit">
    <div>
        <label for="type">Type</label>

        <InputSelect id="type" @bind-Value="Cloth.Type" class="form-control">
            @foreach (Type type in Enum.GetValues(typeof(Type)))
            {
                <option value="@type">@type.ToString()</option>
            }
        </InputSelect>
    </div>
    <div>
        <label for="color">Color</label>
        <InputText id="color" @bind-Value="Cloth.Color" class="form-control" />
    </div>
    <div>
        <label for="brand">Brand</label>
        <InputText id="brand" @bind-Value="Cloth.Brand" class="form-control" />
    </div>
    <div>
        <label for="imageUrl">Image Url</label>
        <InputText id="imageUrl" @bind-Value="Cloth.ImageUrl" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }

    public Clothpiece Cloth { get; set; } = new Clothpiece();

    protected override async Task OnParametersSetAsync()
    {
        if(Id is not null)
        {
            var result = await Http.GetFromJsonAsync<Clothpiece>($"api/wardrobe/{Id}");
            if (result is not null)
                Cloth = result;
        }
    }
    async Task HandleSubmit()
    {
        if(Id is not null)
        {
            var result= await Http.PutAsJsonAsync($"api/wardrobe/{Id}", Cloth);
            Cloth = await result.Content.ReadFromJsonAsync<Clothpiece>();
        }
        else
        {
            var result = await Http.PostAsJsonAsync($"api/wardrobe", Cloth);
            Cloth = await result.Content.ReadFromJsonAsync<Clothpiece>();
        }
    }
}

