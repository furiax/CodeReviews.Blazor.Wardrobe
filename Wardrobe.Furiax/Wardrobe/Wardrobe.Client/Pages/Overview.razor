@page "/overview"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))


<PageTitle>Overview</PageTitle>

<h1>Wardrobe Overview</h1>

@if (cloths.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Type</th>
                <th>Color</th>
                <th>Brand</th>
                <th>Image</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cloth in cloths)
            {
                <tr>
                    <td>@cloth.Id</td>
                    <td>@cloth.Type</td>
                    <td>@cloth.Color</td>
                    <td>@cloth.Brand</td>
                    <td><img src="@cloth.ImageUrl" style="width: 50px; height:50px"/></td>
                    <td><button class="btn btn-primary" @onclick="@(() => EditClothpiece(cloth.Id))">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="AddClothpiece">Add clothpiece</button>

}

@code {
    List<Clothpiece> cloths = new List<Clothpiece>();

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<List<Clothpiece>>("api/wardrobe");
        if(result is not null)
            cloths = result;
    }

    void AddClothpiece()
    {
        NavigationManager.NavigateTo("edit-clothpiece");
    }
    void EditClothpiece(int id)
    {
        NavigationManager.NavigateTo($"edit-clothpiece/{id}");
    }
}
